generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Token {
  id            String         @id @default(cuid())
  token         String         @unique
  label         String
  maxMessages   Int            @default(30)
  usedMessages  Int            @default(0)
  expiresAt     DateTime
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  company       String?
  conversations Conversation[]
  sessions      Session[]

  @@map("tokens")
}

model Session {
  id            String         @id @default(cuid())
  sessionId     String         @unique
  tokenId       String
  userAgent     String?
  ipAddress     String?
  createdAt     DateTime       @default(now())
  conversations Conversation[]
  token         Token          @relation(fields: [tokenId], references: [id], onDelete: Cascade)

  @@map("sessions")
}

model Conversation {
  id        String   @id @default(cuid())
  tokenId   String
  message   String
  response  String
  createdAt DateTime @default(now())
  sessionId String?
  session   Session? @relation(fields: [sessionId], references: [id])
  token     Token    @relation(fields: [tokenId], references: [id], onDelete: Cascade)

  @@map("conversations")
}

model KnowledgeBase {
  id        String   @id @default(cuid())
  content   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("knowledge_base")
}

model TokenAnalytics {
  id            String   @id @default(cuid())
  failureReason String?
  tokenString   String?
  userAgent     String?
  ipAddress     String?
  accessType    String?
  fullUrl       String?
  metadata      Json?
  createdAt     DateTime @default(now())

  @@map("token_analytics")
}
